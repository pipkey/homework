{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h1/AlternativeMessage.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","AlternativeMessage","Message","props","className","ss","main","ava","src","avatar","content","name","message","time","messageData","HW1","Affair","affair","onClick","deleteAffairCallback","id","Affairs","mappedAffairs","data","map","a","s","aff","setFilter","defaultAffairs","priority","HW2","useState","affairs","setAffairs","filter","filteredAffairs","af","filterAffairs","main_div","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","value","onChange","GreetingContainer","users","addUserCallback","setName","setError","length","e","currentTarget","alert","HW3","setUsers","newUser","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","key","SuperButton","red","finalClassName","button_red","button_default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,KAAO,sBAAsB,IAAM,qBAAqB,QAAU,yBAAyB,KAAO,sBAAsB,QAAU,yBAAyB,KAAO,wB,oBCApLD,EAAOC,QAAU,CAAC,SAAW,0BAA0B,IAAM,uB,gBCA7DD,EAAOC,QAAU,CAAC,WAAa,mCAAmC,WAAa,mCAAmC,MAAQ,8BAA8B,cAAgB,wC,iBCAxKD,EAAOC,QAAU,CAAC,eAAiB,oCAAoC,WAAa,kC,gBCApFD,EAAOC,QAAU,CAAC,cAAgB,qCAAqC,SAAW,kC,iBCAlFD,EAAOC,QAAU,CAAC,IAAM,mB,gBCAxBD,EAAOC,QAAU,CAAC,UAAY,4BAA4B,MAAQ,0B,gBCAlED,EAAOC,QAAU,CAAC,KAAO,kBAAkB,OAAS,sB,iICSrCC,MARf,WACI,OACI,yB,gBCqBOC,MArBf,SAAiBC,GACb,OACI,sBAAKC,UAAWC,IAAGC,KAAnB,UAEI,qBAAKF,UAAWC,IAAGE,IAAnB,SAEI,qBAAKC,IAAKL,EAAMM,WAIpB,sBAAKL,UAAWC,IAAGK,QAAnB,UACI,sBAAKN,UAAWC,IAAGM,KAAnB,cAA2BR,EAAMQ,KAAjC,OACA,uBAAMP,UAAWC,IAAGO,QAApB,cAA+BT,EAAMS,QAArC,OACA,uBAAMR,UAAWC,IAAGQ,KAApB,cAA4BV,EAAMU,KAAlC,cCZVC,EACM,qFADNA,EAEI,SAFJA,EAGO,wDAHPA,EAII,QAmCKC,MAvBf,WACI,OACI,gCACI,uBADJ,cAMI,cAAC,EAAD,CACIN,OAAQK,EACRH,KAAMG,EACNF,QAASE,EACTD,KAAMC,IAGV,uBAEA,cAAC,EAAD,IACA,2B,OClBGE,MAbf,SAAgBb,GAIZ,OACI,gCACKA,EAAMc,OAAON,KAEd,wBAAQO,QAPO,WACnBf,EAAMgB,qBAAqBhB,EAAMc,OAAOG,KAMpC,mB,gBCgCGC,MArCf,SAAiBlB,GAEb,IAAMmB,EAAgBnB,EAAMoB,KAAKC,KAAI,SAACC,GAAD,OAEjC,cAAC,EAAD,CAEIR,OAAQQ,EACRN,qBAAsBhB,EAAMgB,sBAFvBM,EAAEL,OAmBf,OACI,sBAAKhB,UAAWsB,IAAEC,IAAlB,UAEKL,EAED,wBAAQJ,QAlBD,WACXf,EAAMyB,UAAU,QAiBZ,iBACA,wBAAQV,QAhBA,WACZf,EAAMyB,UAAU,SAeZ,kBACA,wBAAQV,QAdE,WACdf,EAAMyB,UAAU,WAaZ,oBACA,wBAAQV,QAZD,WACXf,EAAMyB,UAAU,QAWZ,qBC1BNC,EAAoC,CACtC,CAACT,GAAI,EAAGT,KAAM,QAASmB,SAAU,QACjC,CAACV,GAAI,EAAGT,KAAM,QAASmB,SAAU,OACjC,CAACV,GAAI,EAAGT,KAAM,QAASmB,SAAU,OACjC,CAACV,GAAI,EAAGT,KAAM,OAAQmB,SAAU,QAChC,CAACV,GAAI,EAAGT,KAAM,aAAcmB,SAAU,WAgD3BC,MA5Bf,WAAgB,IAAD,EACmBC,mBAA4BH,GAD/C,mBACJI,EADI,KACKC,EADL,OAEiBF,mBAAqB,OAFtC,mBAEJG,EAFI,KAEIP,EAFJ,KAILQ,EApBmB,SAACH,EAA4BE,GACtD,MAAe,QAAXA,EACOF,EACU,SAAXE,EACCF,EAAQE,QAAO,SAAAE,GAAE,MAAoB,SAAhBA,EAAGP,YACd,WAAXK,EACEF,EAAQE,QAAO,SAAAE,GAAE,MAAoB,WAAhBA,EAAGP,YACd,QAAXK,EACAF,EAAQE,QAAO,SAAAE,GAAE,MAAoB,QAAhBA,EAAGP,YACtBG,EAWWK,CAAcL,EAASE,GAI/C,OACI,sBAAK/B,UAAWsB,IAAEa,SAAlB,UAEI,+CAGA,cAAC,EAAD,CACIhB,KAAMa,EACNR,UAAWA,EACXT,qBAXiB,SAACC,GAAD,OAAgBc,EAVrB,SAACD,EAA4Bb,GACrD,OAAOa,EAAQE,QAAQ,SAAAE,GAAE,OAAIA,EAAGjB,KAAOA,KASiBoB,CAAaP,EAASb,W,iCClBnEqB,EAlB+B,SAAC,GAEzC,IADD9B,EACA,EADAA,KAAM+B,EACN,EADMA,gBAAiBC,EACvB,EADuBA,QAASC,EAChC,EADgCA,MAAOC,EACvC,EADuCA,WAElCC,EAAaF,EAAQlB,IAAEkB,MAAQ,GAErC,OACI,gCACI,uBAAOG,MAAOpC,EACPqC,SAAUN,EACVtC,UAAW0C,IAElB,+BAAOF,IACP,wBAAQ1B,QAASyB,EAAjB,iBACA,+BAAOE,QCsBJI,EAtCiD,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,gBAAqB,EAClEnB,mBAAiB,IADiD,mBACnFrB,EADmF,KAC7EyC,EAD6E,OAEhEpB,mBAAiB,IAF+C,mBAEnFY,EAFmF,KAE5ES,EAF4E,KAqBpFR,EAAaK,EAAMI,OAMzB,OACI,cAAC,EAAD,CACI3C,KAAMA,EACN+B,gBA1BgB,SAACa,GACrBH,EAAQG,EAAEC,cAAcT,OACxBM,EAAS,KAyBLV,QAtBQ,WACRhC,EACA8C,MAAM,SAAD,OAAU9C,EAAV,QAEL0C,EAAS,SACTI,MAAM,mGAEVN,EAAgBxC,GAChByC,EAAQ,KAeJR,MAAOA,EACPC,WAAYA,KCFTa,MA5Bf,WAAgB,IAAD,EACe1B,mBAA0B,IADzC,mBACJkB,EADI,KACGS,EADH,KASX,OACI,gCACI,uBADJ,cAKI,cAAC,EAAD,CACIT,MAAOA,EACPC,gBAdY,SAACxC,GACrB,IAAIiD,EAAoB,CAACxC,GAAIyC,cAAMlD,KAAMA,GAEzCgD,EAAS,GAAD,mBAAKT,GAAL,CAAYU,QAchB,uBAGA,2B,8BCsBGE,EA1C2C,SAAC,GAUtD,EARGC,KAQF,IAPEf,EAOH,EAPGA,SAAUgB,EAOb,EAPaA,aACVC,EAMH,EANGA,WAAYC,EAMf,EANeA,QACZtB,EAKH,EALGA,MACWuB,GAId,EAJG/D,UAIH,EAJc+D,eAERC,EAEN,6GAcKC,EAAkB,UAAO3C,IAAEkB,MAAT,YAAkBuB,GAAgC,IACpEG,EAAmB,UAAM1B,EAAQlB,IAAE6C,WAAa7C,IAAE8C,YAExD,OACI,qCACI,mCACIT,KAAM,OACNf,SApBa,SAACO,GACtBP,GACGA,EAASO,GACZS,GAAgBA,EAAaT,EAAEC,cAAcT,QAkBrCkB,WAhBe,SAACV,GACxBU,GAAcA,EAAWV,GAEf,UAAVA,EAAEkB,KACCP,GACAA,KAYK9D,UAAWkE,GAEPF,IAEPxB,EAAO,uBAAMxC,UAAWiE,EAAjB,eAAwCzB,EAAxC,OAAyD,sBAAMxC,UAAWkE,EAAjB,mB,kCC1B9DI,EAhBqC,SAAC,GAK/C,IAJDC,EAIA,EAJAA,IAAKvE,EAIL,EAJKA,UACCgE,EAGN,mCACKQ,EAAc,UAAOD,EAAMjD,IAAEmD,WAAYnD,IAAEoD,eAA7B,YAA+C1E,GAEnE,OACI,oCACIA,UAAWwE,GACPR,K,iBCuBDW,EAjCyC,SAAC,GASpD,EAPGhB,KAOF,IANEf,EAMH,EANGA,SAAUgC,EAMb,EANaA,gBACV5E,EAKH,EALGA,UACA6E,GAIH,EALcd,cAKd,EAJGc,UAEGb,EAEN,4FAQKE,EAAmB,UAAM5C,IAAEwD,SAAR,YAAoB9E,GAAwB,IAErE,OACI,kCACI,mCACI2D,KAAM,WACNf,SAba,SAACO,GACtBP,GACGA,EAASO,GACZyB,GAAmBA,EAAgBzB,EAAEC,cAAc2B,UAW3C/E,UAAWkE,GAEPF,IAEPa,GAAY,sBAAM7E,UAAWsB,IAAEyC,cAAnB,SAAmCc,QC+B7CG,MAhEf,WAAgB,IAERT,EAFO,EACa3C,mBAAiB,IAD9B,mBACJqD,EADI,KACEC,EADF,KAGJX,GAAPU,EACA,IAAMzC,EAAQyC,EAAO,GAAK,QAGpBE,EAAY,WACV3C,EACAa,MAAM,iFAENA,MAAM4B,GACNC,EAAQ,MAZL,EAgBmBtD,oBAAkB,GAhBrC,mBAgBJmD,EAhBI,KAgBKK,EAhBL,KAmBX,OACI,gCACI,uBACA,8CAEA,sBAAKpF,UAAWsB,IAAE+D,OAAlB,UAEI,cAAC,EAAD,CACI1C,MAAOsC,EACPrB,aAAcsB,EACdpB,QAASqB,EACT3C,MAAOA,IAKX,cAAC,EAAD,CACI+B,IAAKA,EACLzD,QAASqE,EAFb,mBAQA,cAAC,EAAD,CACIJ,QAASA,EACTH,gBAAiBQ,EAFrB,wBAQA,cAAC,EAAD,CAAeL,QAASA,EAASnC,SAlCxB,SAACO,GAAD,OAAsCiC,EAAWjC,EAAEC,cAAc2B,eAqC9E,uBAKA,2BC5CGO,MAdf,WACI,OACI,sBAAKtF,UAAWsB,IAAEgE,IAAlB,UACI,mDACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCFQC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SDiItB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA/D,GACLgE,QAAQhE,MAAMA,EAAMhC,c","file":"static/js/main.e96175f6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Message_main__3yxwt\",\"ava\":\"Message_ava__GRBli\",\"content\":\"Message_content__1p2rL\",\"name\":\"Message_name__22HHX\",\"message\":\"Message_message__t2A0M\",\"time\":\"Message_time__2iw5Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_div\":\"Affairs_main_div__1F-mv\",\"aff\":\"Affairs_aff__2BzFS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1wR2b\",\"errorInput\":\"SuperInputText_errorInput__31l4t\",\"error\":\"SuperInputText_error__1jQ_T\",\"spanClassName\":\"SuperInputText_spanClassName__2PVx0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button_default\":\"SuperButton_button_default__1-nLB\",\"button_red\":\"SuperButton_button_red__16F2x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spanClassName\":\"SuperCheckbox_spanClassName__J5ROI\",\"checkbox\":\"SuperCheckbox_checkbox__ZeowK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3wGbK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__GVUz_\",\"error\":\"Greeting_error__1GSG8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__F4RlP\",\"column\":\"HW4_column__2aQwW\"};","import React from \"react\";\r\n\r\nfunction AlternativeMessage() {\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AlternativeMessage;\r\n","import React from \"react\";\r\nimport {messageType} from \"./HW1\";\r\nimport ss from \"./Message.module.css\"\r\n\r\nfunction Message(props: messageType) {\r\n    return (\r\n        <div className={ss.main}>\r\n\r\n            <div className={ss.ava}>\r\n\r\n                <img src={props.avatar}/>\r\n\r\n            </div>\r\n\r\n            <div className={ss.content}>\r\n                <div className={ss.name}> {props.name} </div>\r\n                <span className={ss.message}> {props.message} </span>\r\n                <span className={ss.time}> {props.time} </span>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport AlternativeMessage from \"./AlternativeMessage\";\r\nimport Message from \"./Message\";\r\n\r\n\r\nconst messageData = {\r\n    avatar: \"https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg\",\r\n    name: \"Philip\",\r\n    message: \"npm start нажимал?\",\r\n    time: \"22:00\",\r\n};\r\n\r\n export type messageType = {\r\n    avatar: string,\r\n    name: string,\r\n    message: string,\r\n    time: string\r\n}\r\n\r\n\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            <AlternativeMessage/>\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW1;\r\n","import React from \"react\";\r\nimport {AffairType} from \"./HW2\";\r\n\r\ntype AffairPropsType = {\r\n    affair: AffairType\r\n    deleteAffairCallback: (id: number) => void\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {\r\n        props.deleteAffairCallback(props.affair.id)\r\n    };\r\n    return (\r\n        <div>\r\n            {props.affair.name}\r\n\r\n            <button onClick={deleteCallback}>X</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Affair;\r\n","import React from \"react\";\r\nimport Affair from \"./Affair\";\r\nimport {AffairType, FilterType} from \"./HW2\";\r\nimport s from \"./Affairs.module.css\"\r\n\r\ntype AffairsPropsType = {\r\n    data: Array<AffairType>\r\n    setFilter: (filter:FilterType) => void\r\n    deleteAffairCallback: (id: number) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n\r\n        <Affair\r\n            key={a.id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ));\r\n\r\n    const setAll = () => {\r\n        props.setFilter(\"all\")\r\n    };\r\n    const setHigh = () => {\r\n        props.setFilter(\"high\")\r\n    };\r\n    const setMiddle = () => {\r\n        props.setFilter(\"middle\")\r\n    };\r\n    const setLow = () => {\r\n        props.setFilter(\"low\")\r\n    };\r\n\r\n    return (\r\n        <div className={s.aff}>\r\n\r\n            {mappedAffairs}\r\n\r\n            <button onClick={setAll}>All</button>\r\n            <button onClick={setHigh}>High</button>\r\n            <button onClick={setMiddle}>Middle</button>\r\n            <button onClick={setLow}>Low</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Affairs;\r\n","import React, {useState} from \"react\";\r\nimport Affairs from \"./Affairs\";\r\nimport s from \"./Affairs.module.css\"\r\n\r\n// types\r\nexport type AffairPriorityType =  \"high\" | \"middle\" | \"low\"\r\n\r\nexport type AffairType = {\r\n    id: number\r\n    name: string\r\n    priority: string\r\n};\r\nexport type FilterType = \"all\" | AffairPriorityType;\r\n\r\n\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [\r\n    {id: 1, name: \"React\", priority: \"high\"},\r\n    {id: 2, name: \"anime\", priority: \"low\"},\r\n    {id: 3, name: \"games\", priority: \"low\"},\r\n    {id: 4, name: \"work\", priority: \"high\"},\r\n    {id: 5, name: \"html & css\", priority: \"middle\"},\r\n    ];\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => {\r\n    if (filter === \"all\") {\r\n        return affairs;\r\n    }else if (filter === \"high\") {\r\n       return  affairs.filter(af => af.priority === \"high\")\r\n    }else if (filter === \"middle\"){\r\n        return  affairs.filter(af => af.priority === \"middle\")\r\n    } else if (filter === \"low\"){\r\n       return  affairs.filter(af => af.priority === \"low\")\r\n    }else return affairs\r\n};\r\n\r\nexport const deleteAffair = (affairs:Array<AffairType> , id: number): Array<AffairType> => {\r\n    return affairs.filter( af => af.id !== id)\r\n};\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs);\r\n    const [filter, setFilter] = useState<FilterType>(\"all\");\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter);\r\n\r\n    const deleteAffairCallback = (id: number) => setAffairs(deleteAffair(affairs, id));\r\n\r\n    return (\r\n        <div className={s.main_div}>\r\n\r\n            <h3> Home Works 2</h3>\r\n\r\n\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW2;\r\n","import React, {ChangeEvent} from \"react\";\r\nimport s from \"./Greeting.module.css\";\r\n\r\ntype GreetingPropsType = {\r\n    name: string\r\n    setNameCallback: (e:ChangeEvent<HTMLInputElement>)=>void\r\n    addUser: ()=>void\r\n    error: string\r\n    totalUsers: number\r\n}\r\n\r\n\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers}\r\n) => {\r\n    const inputClass = error ? s.error : \"\";\r\n\r\n    return (\r\n        <div>\r\n            <input value={name}\r\n                   onChange={setNameCallback}\r\n                   className={inputClass}\r\n            />\r\n            <span>{error}</span>\r\n            <button onClick={addUser}>add</button>\r\n            <span>{totalUsers}</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Greeting;\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport Greeting from \"./Greeting\";\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType>\r\n    addUserCallback: (name: string) => void\r\n}\r\n\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => {\r\n    const [name, setName] = useState<string>(\"\");\r\n    const [error, setError] = useState<string>(\"\");\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setName(e.currentTarget.value);\r\n        setError(\"\")\r\n\r\n    };\r\n    const addUser = () => {\r\n        if (name) {\r\n            alert(`Hello ${name} !`);\r\n        } else {\r\n            setError(\"error\");\r\n            alert(\"НАПИШИ НОРМАЛЬНО!!!\")\r\n        }\r\n        addUserCallback(name);\r\n        setName(\"\");\r\n\r\n    };\r\n\r\n    const totalUsers = users.length;\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    );\r\n};\r\n\r\nexport default GreetingContainer;\r\n","import React, {useState} from \"react\";\r\nimport {v1} from \"uuid\";\r\nimport GreetingContainer from \"./GreetingContainer\";\r\n\r\n\r\n// types\r\nexport type UserType = {\r\n    id: string\r\n    name: string\r\n}\r\n\r\n\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([]);\r\n\r\n    const addUserCallback = (name: string) => {\r\n        let newUser: UserType = {id: v1(), name: name};\r\n\r\n        setUsers([...users, newUser]);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer\r\n                users={users}\r\n                addUserCallback={addUserCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW3;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    };\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    };\r\n\r\n    const finalSpanClassName =  `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `${error ? s.errorInput : s.superInput}`;\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"text\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error ?<span className={finalSpanClassName}>  {error} </span> : <span className={finalInputClassName}> </span>}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SuperInputText;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {red, className,\r\n        ...restProps\r\n        // все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${ red ? s.button_red: s.button_default} ${className}`;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange\r\n        && onChange(e);\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\r\nimport s from \"./HW4.module.css\";\r\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>(\"\");\r\n    let red: boolean\r\n    text ? red = false : red = true\r\n    const error = text ? \"\" : \"error\";\r\n\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert(\"введите текст...\");\r\n        } else {\r\n            alert(text); // если нет ошибки показать текст\r\n            setText(\"\")\r\n        }\r\n    };\r\n\r\n    const [checked, setChecked] = useState<boolean>(false);\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            <h3> HOMEWORK 4 </h3>\r\n\r\n            <div className={s.column}>\r\n                {/*should work (должно работать)*/}\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*should work (должно работать)*/}\r\n                <SuperButton\r\n                    red={red} // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    push {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                {/*should work (должно работать)*/}\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW4;\r\n","import React from \"react\";\r\nimport s from \"./App.module.css\";\r\nimport HW1 from \"../../../p2-homeworks/h1/HW1\";\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            {/*<HW5/>*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./p1-main/m1-ui/u1-app/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}